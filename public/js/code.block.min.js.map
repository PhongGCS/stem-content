{"version":3,"sources":["prism.min.js","code.block.js"],"names":["_self","window","WorkerGlobalScope","self","Prism","e","t","n","util","encode","a","type","content","alias","map","replace","Object","prototype","toString","call","match","objId","__id","defineProperty","value","clone","r","hasOwnProperty","languages","extend","insertBefore","i","arguments","length","l","o","s","DFS","this","plugins","highlightAll","callback","selector","hooks","run","elements","document","querySelectorAll","highlightElement","test","className","parentNode","toLowerCase","nodeName","textContent","u","element","language","grammar","code","Worker","g","filename","onmessage","highlightedCode","data","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","tokenize","Token","rest","inside","c","lookbehind","h","greedy","f","d","pattern","global","p","RegExp","source","m","y","v","lastIndex","b","exec","k","w","index","_","A","P","j","slice","x","O","S","push","N","Array","splice","apply","all","add","join","tag","classes","attributes","parent","spellcheck","keys","addEventListener","parse","close","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","module","exports","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","title","xml","html","mathml","svg","css","atrule","rule","url","string","property","important","function","style","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","regex","template-string","interpolation","interpolation-punctuation","script","js","variable","bash","shebang","macro","directive","constant","csharp","generic-method","preprocessor","cpp","ruby","delimiter","symbol","builtin","pseudo-element","pseudo-class","class","id","attribute","hexcode","elixir","atom","capture","argument","forEach","json","null","jsonp","less","mixin-usage","objectivec","php","shell-comment","package","tokenStack","backupCode","scope","rust","macro-rules","closure-params","scss","placeholder","statement","sql","swift","twig","ld","rd","other","yaml","scalar","key","datetime","querySelector","createElement","setAttribute","counterReset","parseInt","getAttribute","appendChild","split","isNaN","children","removeAttribute","outerHTML","defaults","toUpperCase","charCodeAt","assign","setDefaults","normalize","leftTrim","rightTrim","tabsToSpaces","spacesToTabs","removeTrailing","removeInitialLineFeed","removeIndent","sort","indent","breakLines","NormalizeWhitespace","remove-trailing","remove-indent","left-trim","right-trim","settings","childNodes","nodeValue","removeChild","KeepMarkup","tinymce","PluginManager","editor","pluginUrl","isCodeBlock","elm","indexOf","trimArg","predicateFn","arg1","arg2","getSelectedCodeBlock","node","selection","getNode","getShowLineNumbers","getShowCommandPrompt","getCommandPrompt","dataset","prompt","getCurrentCode","getCurrentLanguage","matches","insertCodeBlock","undoManager","transact","DOM","display_line_numbers","show_command_prompt","cssClasses","dom","setAttrib","command_prompt","select","insertContent","$","removeAttr","openEditor","windowManager","open","minWidth","Math","min","getViewPort","minHeight","layout","direction","align","body","name","label","maxWidth","values","codeBlockLanguages","checked","multiline","ariaLabel","flex","autofocus","onSubmit","DOMUtils","on","filter","each","idx","$elm","attr","trim","empty","append","unprocessedCodeBlocks","contentEditable","find","replaceChild","getDoc","createTextNode","addCommand","addButton","cmd","image"],"mappings":"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","file":"code.block.min.js","sourcesContent":["/* http://prismjs.com/download.html?themes=prism&languages=markup+css+clike+javascript+bash+c+csharp+cpp+ruby+css-extras+elixir+json+less+objectivec+php+php-extras+rust+scss+sql+swift+twig+yaml&plugins=line-numbers+command-line+normalize-whitespace */\nvar _self=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(){var e=/\\blang(?:uage)?-(\\w+)\\b/i,t=0,n=_self.Prism={util:{encode:function(e){return e instanceof a?new a(e.type,n.util.encode(e.content),e.alias):\"Array\"===n.util.type(e)?e.map(n.util.encode):e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).match(/\\[object (\\w+)\\]/)[1]},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++t}),e.__id},clone:function(e){var t=n.util.type(e);switch(t){case\"Object\":var a={};for(var r in e)e.hasOwnProperty(r)&&(a[r]=n.util.clone(e[r]));return a;case\"Array\":return e.map&&e.map(function(e){return n.util.clone(e)})}return e}},languages:{extend:function(e,t){var a=n.util.clone(n.languages[e]);for(var r in t)a[r]=t[r];return a},insertBefore:function(e,t,a,r){r=r||n.languages;var i=r[e];if(2==arguments.length){a=arguments[1];for(var l in a)a.hasOwnProperty(l)&&(i[l]=a[l]);return i}var o={};for(var s in i)if(i.hasOwnProperty(s)){if(s==t)for(var l in a)a.hasOwnProperty(l)&&(o[l]=a[l]);o[s]=i[s]}return n.languages.DFS(n.languages,function(t,n){n===r[e]&&t!=e&&(this[t]=o)}),r[e]=o},DFS:function(e,t,a,r){r=r||{};for(var i in e)e.hasOwnProperty(i)&&(t.call(e,i,e[i],a||i),\"Object\"!==n.util.type(e[i])||r[n.util.objId(e[i])]?\"Array\"!==n.util.type(e[i])||r[n.util.objId(e[i])]||(r[n.util.objId(e[i])]=!0,n.languages.DFS(e[i],t,i,r)):(r[n.util.objId(e[i])]=!0,n.languages.DFS(e[i],t,null,r)))}},plugins:{},highlightAll:function(e,t){var a={callback:t,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};n.hooks.run(\"before-highlightall\",a);for(var r,i=a.elements||document.querySelectorAll(a.selector),l=0;r=i[l++];)n.highlightElement(r,e===!0,a.callback)},highlightElement:function(t,a,r){for(var i,l,o=t;o&&!e.test(o.className);)o=o.parentNode;o&&(i=(o.className.match(e)||[,\"\"])[1].toLowerCase(),l=n.languages[i]),t.className=t.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+i,o=t.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+i);var s=t.textContent,u={element:t,language:i,grammar:l,code:s};if(n.hooks.run(\"before-sanity-check\",u),!u.code||!u.grammar)return u.code&&(u.element.textContent=u.code),n.hooks.run(\"complete\",u),void 0;if(n.hooks.run(\"before-highlight\",u),a&&_self.Worker){var g=new Worker(n.filename);g.onmessage=function(e){u.highlightedCode=e.data,n.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,r&&r.call(u.element),n.hooks.run(\"after-highlight\",u),n.hooks.run(\"complete\",u)},g.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}))}else u.highlightedCode=n.highlight(u.code,u.grammar,u.language),n.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,r&&r.call(t),n.hooks.run(\"after-highlight\",u),n.hooks.run(\"complete\",u)},highlight:function(e,t,r){var i=n.tokenize(e,t);return a.stringify(n.util.encode(i),r)},tokenize:function(e,t){var a=n.Token,r=[e],i=t.rest;if(i){for(var l in i)t[l]=i[l];delete t.rest}e:for(var l in t)if(t.hasOwnProperty(l)&&t[l]){var o=t[l];o=\"Array\"===n.util.type(o)?o:[o];for(var s=0;s<o.length;++s){var u=o[s],g=u.inside,c=!!u.lookbehind,h=!!u.greedy,f=0,d=u.alias;if(h&&!u.pattern.global){var p=u.pattern.toString().match(/[imuy]*$/)[0];u.pattern=RegExp(u.pattern.source,p+\"g\")}u=u.pattern||u;for(var m=0,y=0;m<r.length;y+=r[m].length,++m){var v=r[m];if(r.length>e.length)break e;if(!(v instanceof a)){u.lastIndex=0;var b=u.exec(v),k=1;if(!b&&h&&m!=r.length-1){if(u.lastIndex=y,b=u.exec(e),!b)break;for(var w=b.index+(c?b[1].length:0),_=b.index+b[0].length,A=m,P=y,j=r.length;j>A&&_>P;++A)P+=r[A].length,w>=P&&(++m,y=P);if(r[m]instanceof a||r[A-1].greedy)continue;k=A-m,v=e.slice(y,P),b.index-=y}if(b){c&&(f=b[1].length);var w=b.index+f,b=b[0].slice(f),_=w+b.length,x=v.slice(0,w),O=v.slice(_),S=[m,k];x&&S.push(x);var N=new a(l,g?n.tokenize(b,g):b,d,b,h);S.push(N),O&&S.push(O),Array.prototype.splice.apply(r,S)}}}}}return r},hooks:{all:{},add:function(e,t){var a=n.hooks.all;a[e]=a[e]||[],a[e].push(t)},run:function(e,t){var a=n.hooks.all[e];if(a&&a.length)for(var r,i=0;r=a[i++];)r(t)}}},a=n.Token=function(e,t,n,a,r){this.type=e,this.content=t,this.alias=n,this.length=0|(a||\"\").length,this.greedy=!!r};if(a.stringify=function(e,t,r){if(\"string\"==typeof e)return e;if(\"Array\"===n.util.type(e))return e.map(function(n){return a.stringify(n,t,e)}).join(\"\");var i={type:e.type,content:a.stringify(e.content,t,r),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:t,parent:r};if(\"comment\"==i.type&&(i.attributes.spellcheck=\"true\"),e.alias){var l=\"Array\"===n.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(i.classes,l)}n.hooks.run(\"wrap\",i);var o=Object.keys(i.attributes).map(function(e){return e+'=\"'+(i.attributes[e]||\"\").replace(/\"/g,\"&quot;\")+'\"'}).join(\" \");return\"<\"+i.tag+' class=\"'+i.classes.join(\" \")+'\"'+(o?\" \"+o:\"\")+\">\"+i.content+\"</\"+i.tag+\">\"},!_self.document)return _self.addEventListener?(_self.addEventListener(\"message\",function(e){var t=JSON.parse(e.data),a=t.language,r=t.code,i=t.immediateClose;_self.postMessage(n.highlight(r,n.languages[a],a)),i&&_self.close()},!1),_self.Prism):_self.Prism;var r=document.currentScript||[].slice.call(document.getElementsByTagName(\"script\")).pop();return r&&(n.filename=r.src,document.addEventListener&&!r.hasAttribute(\"data-manual\")&&(\"loading\"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(n.highlightAll):window.setTimeout(n.highlightAll,16):document.addEventListener(\"DOMContentLoaded\",n.highlightAll))),_self.Prism}();\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism),\"undefined\"!=typeof global&&(global.Prism=Prism);\nPrism.languages.markup={comment:/<!--[\\w\\W]*?-->/,prolog:/<\\?[\\w\\W]+?\\?>/,doctype:/<!DOCTYPE[\\w\\W]+?>/i,cdata:/<!\\[CDATA\\[[\\w\\W]*?]]>/i,tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/i,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"attr-value\":{pattern:/=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,inside:{punctuation:/[=>\"']/}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:/&#?[\\da-z]{1,8};/i},Prism.hooks.add(\"wrap\",function(a){\"entity\"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,\"&\"))}),Prism.languages.xml=Prism.languages.markup,Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup;\nPrism.languages.css={comment:/\\/\\*[\\w\\W]*?\\*\\//,atrule:{pattern:/@[\\w-]+?.*?(;|(?=\\s*\\{))/i,inside:{rule:/@[\\w-]+/}},url:/url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,selector:/[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,string:{pattern:/(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},property:/(\\b|\\B)[\\w-]+(?=\\s*:)/i,important:/\\B!important\\b/i,\"function\":/[-a-z0-9]+(?=\\()/i,punctuation:/[(){};:]/},Prism.languages.css.atrule.inside.rest=Prism.util.clone(Prism.languages.css),Prism.languages.markup&&(Prism.languages.insertBefore(\"markup\",\"tag\",{style:{pattern:/(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,lookbehind:!0,inside:Prism.languages.css,alias:\"language-css\"}}),Prism.languages.insertBefore(\"inside\",\"attr-value\",{\"style-attr\":{pattern:/\\s*style=(\"|').*?\\1/i,inside:{\"attr-name\":{pattern:/^\\s*style/i,inside:Prism.languages.markup.tag.inside},punctuation:/^\\s*=\\s*['\"]|['\"]\\s*$/,\"attr-value\":{pattern:/.+/i,inside:Prism.languages.css}},alias:\"language-css\"}},Prism.languages.markup.tag));\nPrism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:{pattern:/([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,lookbehind:!0,inside:{punctuation:/(\\.|\\\\)/}},keyword:/\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\"boolean\":/\\b(true|false)\\b/,\"function\":/[a-z0-9_]+(?=\\()/i,number:/\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,operator:/--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,punctuation:/[{}[\\];(),.:]/};\nPrism.languages.javascript=Prism.languages.extend(\"clike\",{keyword:/\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,number:/\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\"function\":/[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,operator:/--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/}),Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/(^|[^\\/])\\/(?!\\/)(\\[.+?]|\\\\.|[^\\/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0,greedy:!0}}),Prism.languages.insertBefore(\"javascript\",\"string\",{\"template-string\":{pattern:/`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,greedy:!0,inside:{interpolation:{pattern:/\\$\\{[^}]+\\}/,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}}}),Prism.languages.markup&&Prism.languages.insertBefore(\"markup\",\"tag\",{script:{pattern:/(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,lookbehind:!0,inside:Prism.languages.javascript,alias:\"language-javascript\"}}),Prism.languages.js=Prism.languages.javascript;\n!function(e){var t={variable:[{pattern:/\\$?\\(\\([\\w\\W]+?\\)\\)/,inside:{variable:[{pattern:/(^\\$\\(\\([\\w\\W]+)\\)\\)/,lookbehind:!0},/^\\$\\(\\(/],number:/\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee]-?\\d+)?)\\b/,operator:/--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,punctuation:/\\(\\(?|\\)\\)?|,|;/}},{pattern:/\\$\\([^)]+\\)|`[^`]+`/,inside:{variable:/^\\$\\(|^`|\\)$|`$/}},/\\$(?:[a-z0-9_#\\?\\*!@]+|\\{[^}]+\\})/i]};e.languages.bash={shebang:{pattern:/^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,alias:\"important\"},comment:{pattern:/(^|[^\"{\\\\])#.*/,lookbehind:!0},string:[{pattern:/((?:^|[^<])<<\\s*)(?:\"|')?(\\w+?)(?:\"|')?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/g,lookbehind:!0,greedy:!0,inside:t},{pattern:/([\"'])(?:\\\\\\\\|\\\\?[^\\\\])*?\\1/g,greedy:!0,inside:t}],variable:t.variable,\"function\":{pattern:/(^|\\s|;|\\||&)(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|\\s|;|\\||&)/,lookbehind:!0},keyword:{pattern:/(^|\\s|;|\\||&)(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|\\s|;|\\||&)/,lookbehind:!0},\"boolean\":{pattern:/(^|\\s|;|\\||&)(?:true|false)(?=$|\\s|;|\\||&)/,lookbehind:!0},operator:/&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,punctuation:/\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/};var a=t.variable[1].inside;a[\"function\"]=e.languages.bash[\"function\"],a.keyword=e.languages.bash.keyword,a.boolean=e.languages.bash.boolean,a.operator=e.languages.bash.operator,a.punctuation=e.languages.bash.punctuation}(Prism);\nPrism.languages.c=Prism.languages.extend(\"clike\",{keyword:/\\b(asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,operator:/\\-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*\\/]/,number:/\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)[ful]*\\b/i}),Prism.languages.insertBefore(\"c\",\"string\",{macro:{pattern:/(^\\s*)#\\s*[a-z]+([^\\r\\n\\\\]|\\\\.|\\\\(?:\\r\\n?|\\n))*/im,lookbehind:!0,alias:\"property\",inside:{string:{pattern:/(#\\s*include\\s*)(<.+?>|(\"|')(\\\\?.)+?\\3)/,lookbehind:!0},directive:{pattern:/(#\\s*)\\b(define|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,lookbehind:!0,alias:\"keyword\"}}},constant:/\\b(__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|stdin|stdout|stderr)\\b/}),delete Prism.languages.c[\"class-name\"],delete Prism.languages.c[\"boolean\"];\nPrism.languages.csharp=Prism.languages.extend(\"clike\",{keyword:/\\b(abstract|as|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|do|double|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|goto|if|implicit|in|int|interface|internal|is|lock|long|namespace|new|null|object|operator|out|override|params|private|protected|public|readonly|ref|return|sbyte|sealed|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|virtual|void|volatile|while|add|alias|ascending|async|await|descending|dynamic|from|get|global|group|into|join|let|orderby|partial|remove|select|set|value|var|where|yield)\\b/,string:[/@(\"|')(\\1\\1|\\\\\\1|\\\\?(?!\\1)[\\s\\S])*\\1/,/(\"|')(\\\\?.)*?\\1/],number:/\\b-?(0x[\\da-f]+|\\d*\\.?\\d+f?)\\b/i}),Prism.languages.insertBefore(\"csharp\",\"keyword\",{\"generic-method\":{pattern:/[a-z0-9_]+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/i,alias:\"function\",inside:{keyword:Prism.languages.csharp.keyword,punctuation:/[<>(),.:]/}},preprocessor:{pattern:/(^\\s*)#.*/m,lookbehind:!0,alias:\"property\",inside:{directive:{pattern:/(\\s*#)\\b(define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,lookbehind:!0,alias:\"keyword\"}}}});\nPrism.languages.cpp=Prism.languages.extend(\"c\",{keyword:/\\b(alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\"boolean\":/\\b(true|false)\\b/,operator:/[-+]{1,2}|!=?|<{1,2}=?|>{1,2}=?|\\->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|?\\||\\?|\\*|\\/|\\b(and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/}),Prism.languages.insertBefore(\"cpp\",\"keyword\",{\"class-name\":{pattern:/(class\\s+)[a-z0-9_]+/i,lookbehind:!0}});\n!function(e){e.languages.ruby=e.languages.extend(\"clike\",{comment:/#(?!\\{[^\\r\\n]*?\\}).*/,keyword:/\\b(alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/});var n={pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"tag\"},rest:e.util.clone(e.languages.ruby)}};e.languages.insertBefore(\"ruby\",\"keyword\",{regex:[{pattern:/%r([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\1[gim]{0,3}/,inside:{interpolation:n}},{pattern:/%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,inside:{interpolation:n}},{pattern:/%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,inside:{interpolation:n}},{pattern:/%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,inside:{interpolation:n}},{pattern:/%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,inside:{interpolation:n}},{pattern:/(^|[^\\/])\\/(?!\\/)(\\[.+?]|\\\\.|[^\\/\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0}],variable:/[@$]+[a-zA-Z_][a-zA-Z_0-9]*(?:[?!]|\\b)/,symbol:/:[a-zA-Z_][a-zA-Z_0-9]*(?:[?!]|\\b)/}),e.languages.insertBefore(\"ruby\",\"number\",{builtin:/\\b(Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|File|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,constant:/\\b[A-Z][a-zA-Z_0-9]*(?:[?!]|\\b)/}),e.languages.ruby.string=[{pattern:/%[qQiIwWxs]?([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\1/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,greedy:!0,inside:{interpolation:n}},{pattern:/(\"|')(#\\{[^}]+\\}|\\\\(?:\\r?\\n|\\r)|\\\\?.)*?\\1/,greedy:!0,inside:{interpolation:n}}]}(Prism);\nPrism.languages.css.selector={pattern:/[^\\{\\}\\s][^\\{\\}]*(?=\\s*\\{)/,inside:{\"pseudo-element\":/:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\"pseudo-class\":/:[-\\w]+(?:\\(.*\\))?/,\"class\":/\\.[-:\\.\\w]+/,id:/#[-:\\.\\w]+/,attribute:/\\[[^\\]]+\\]/}},Prism.languages.insertBefore(\"css\",\"function\",{hexcode:/#[\\da-f]{3,6}/i,entity:/\\\\[\\da-f]{1,8}/i,number:/[\\d%\\.]+/});\nPrism.languages.elixir={comment:{pattern:/(^|[^#])#(?![{#]).*/m,lookbehind:!0},regex:/~[rR](?:(\"\"\"|'''|[\\/|\"'])(?:\\\\.|(?!\\1)[^\\\\])+\\1|\\((?:\\\\\\)|[^)])+\\)|\\[(?:\\\\\\]|[^\\]])+\\]|\\{(?:\\\\\\}|[^}])+\\}|<(?:\\\\>|[^>])+>)[uismxfr]*/,string:[{pattern:/~[cCsSwW](?:(\"\"\"|'''|[\\/|\"'])(?:\\\\.|(?!\\1)[^\\\\])+\\1|\\((?:\\\\\\)|[^)])+\\)|\\[(?:\\\\\\]|[^\\]])+\\]|\\{(?:\\\\\\}|#\\{[^}]+\\}|[^}])+\\}|<(?:\\\\>|[^>])+>)[csa]?/,inside:{}},{pattern:/(\"\"\"|''')[\\s\\S]*?\\1/,inside:{}},{pattern:/(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,inside:{}}],atom:{pattern:/(^|[^:]):\\w+/,lookbehind:!0,alias:\"symbol\"},\"attr-name\":/\\w+:(?!:)/,capture:{pattern:/(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,lookbehind:!0,alias:\"function\"},argument:{pattern:/(^|[^&])&\\d+/,lookbehind:!0,alias:\"variable\"},attribute:{pattern:/@[\\S]+/,alias:\"variable\"},number:/\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,keyword:/\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\"boolean\":/\\b(?:true|false|nil)\\b/,operator:[/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,{pattern:/([^<])<(?!<)/,lookbehind:!0},{pattern:/([^>])>(?!>)/,lookbehind:!0}],punctuation:/<<|>>|[.,%\\[\\]{}()]/},Prism.languages.elixir.string.forEach(function(e){e.inside={interpolation:{pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"punctuation\"},rest:Prism.util.clone(Prism.languages.elixir)}}}});\nPrism.languages.json={property:/\"(?:\\\\.|[^|\"])*\"(?=\\s*:)/gi,string:/\"(?!:)(?:\\\\.|[^|\"])*\"(?!:)/g,number:/\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?)\\b/g,punctuation:/[{}[\\]);,]/g,operator:/:/g,\"boolean\":/\\b(true|false)\\b/gi,\"null\":/\\bnull\\b/gi},Prism.languages.jsonp=Prism.languages.json;\nPrism.languages.less=Prism.languages.extend(\"css\",{comment:[/\\/\\*[\\w\\W]*?\\*\\//,{pattern:/(^|[^\\\\])\\/\\/.*/,lookbehind:!0}],atrule:{pattern:/@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,inside:{variable:/@+[\\w-]+/}},property:/(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,punctuation:/[{}();:,]/,operator:/[+\\-*\\/]/}),Prism.languages.insertBefore(\"less\",\"punctuation\",{\"function\":Prism.languages.less.function}),Prism.languages.insertBefore(\"less\",\"property\",{variable:[{pattern:/@[\\w-]+\\s*:/,inside:{punctuation:/:/}},/@@?[\\w-]+/],\"mixin-usage\":{pattern:/([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,lookbehind:!0,alias:\"function\"}});\nPrism.languages.objectivec=Prism.languages.extend(\"c\",{keyword:/\\b(asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,string:/(\"|')(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,operator:/-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/});\nPrism.languages.php=Prism.languages.extend(\"clike\",{keyword:/\\b(and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,constant:/\\b[A-Z0-9_]{2,}\\b/,comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,lookbehind:!0,greedy:!0}}),Prism.languages.insertBefore(\"php\",\"class-name\",{\"shell-comment\":{pattern:/(^|[^\\\\])#.*/,lookbehind:!0,alias:\"comment\"}}),Prism.languages.insertBefore(\"php\",\"keyword\",{delimiter:/\\?>|<\\?(?:php)?/i,variable:/\\$\\w+\\b/i,\"package\":{pattern:/(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,lookbehind:!0,inside:{punctuation:/\\\\/}}}),Prism.languages.insertBefore(\"php\",\"operator\",{property:{pattern:/(->)[\\w]+/,lookbehind:!0}}),Prism.languages.markup&&(Prism.hooks.add(\"before-highlight\",function(e){\"php\"===e.language&&(e.tokenStack=[],e.backupCode=e.code,e.code=e.code.replace(/(?:<\\?php|<\\?)[\\w\\W]*?(?:\\?>)/gi,function(a){return e.tokenStack.push(a),\"{{{PHP\"+e.tokenStack.length+\"}}}\"}))}),Prism.hooks.add(\"before-insert\",function(e){\"php\"===e.language&&(e.code=e.backupCode,delete e.backupCode)}),Prism.hooks.add(\"after-highlight\",function(e){if(\"php\"===e.language){for(var a,n=0;a=e.tokenStack[n];n++)e.highlightedCode=e.highlightedCode.replace(\"{{{PHP\"+(n+1)+\"}}}\",Prism.highlight(a,e.grammar,\"php\").replace(/\\$/g,\"$$$$\"));e.element.innerHTML=e.highlightedCode}}),Prism.hooks.add(\"wrap\",function(e){\"php\"===e.language&&\"markup\"===e.type&&(e.content=e.content.replace(/(\\{\\{\\{PHP[0-9]+\\}\\}\\})/g,'<span class=\"token php\">$1</span>'))}),Prism.languages.insertBefore(\"php\",\"comment\",{markup:{pattern:/<[^?]\\/?(.*?)>/,inside:Prism.languages.markup},php:/\\{\\{\\{PHP[0-9]+\\}\\}\\}/}));\nPrism.languages.insertBefore(\"php\",\"variable\",{\"this\":/\\$this\\b/,global:/\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)/,scope:{pattern:/\\b[\\w\\\\]+::/,inside:{keyword:/(static|self|parent)/,punctuation:/(::|\\\\)/}}});\nPrism.languages.rust={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:[/b?r(#*)\"(?:\\\\?.)*?\"\\1/,/b?(\"|')(?:\\\\?.)*?\\1/],keyword:/\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,attribute:{pattern:/#!?\\[.+?\\]/,alias:\"attr-name\"},\"function\":[/[a-z0-9_]+(?=\\s*\\()/i,/[a-z0-9_]+!(?=\\s*\\(|\\[)/i],\"macro-rules\":{pattern:/[a-z0-9_]+!/i,alias:\"function\"},number:/\\b-?(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(_?\\d)*)?\\.?\\d(_?\\d)*([Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\"closure-params\":{pattern:/\\|[^|]*\\|(?=\\s*[{-])/,inside:{punctuation:/[\\|:,]/,operator:/[&*]/}},punctuation:/[{}[\\];(),:]|\\.+|->/,operator:/[-+*\\/%!^=]=?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/};\nPrism.languages.scss=Prism.languages.extend(\"css\",{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},atrule:{pattern:/@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,inside:{rule:/@[\\w-]+/}},url:/(?:[-a-z]+-)*url(?=\\()/i,selector:{pattern:/(?=\\S)[^@;\\{\\}\\(\\)]?([^@;\\{\\}\\(\\)]|&|#\\{\\$[-_\\w]+\\})+(?=\\s*\\{(\\}|\\s|[^\\}]+(:|\\{)[^\\}]+))/m,inside:{parent:{pattern:/&/,alias:\"important\"},placeholder:/%[-_\\w]+/,variable:/\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/}}}),Prism.languages.insertBefore(\"scss\",\"atrule\",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),Prism.languages.scss.property={pattern:/(?:[\\w-]|\\$[-_\\w]+|#\\{\\$[-_\\w]+\\})+(?=\\s*:)/i,inside:{variable:/\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/}},Prism.languages.insertBefore(\"scss\",\"important\",{variable:/\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/}),Prism.languages.insertBefore(\"scss\",\"function\",{placeholder:{pattern:/%[-_\\w]+/,alias:\"selector\"},statement:{pattern:/\\B!(?:default|optional)\\b/i,alias:\"keyword\"},\"boolean\":/\\b(?:true|false)\\b/,\"null\":/\\bnull\\b/,operator:{pattern:/(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,lookbehind:!0}}),Prism.languages.scss.atrule.inside.rest=Prism.util.clone(Prism.languages.scss);\nPrism.languages.sql={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|(?:--|\\/\\/|#).*)/,lookbehind:!0},string:{pattern:/(^|[^@\\\\])(\"|')(?:\\\\?[\\s\\S])*?\\2/,lookbehind:!0},variable:/@[\\w.$]+|@(\"|'|`)(?:\\\\?[\\s\\S])+?\\1/,\"function\":/\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i,keyword:/\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATE(?:TIME)?|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITER(?:S)?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,\"boolean\":/\\b(?:TRUE|FALSE|NULL)\\b/i,number:/\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,operator:/[-+*\\/=%^~]|&&?|\\|?\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,punctuation:/[;[\\]()`,.]/};\nPrism.languages.swift=Prism.languages.extend(\"clike\",{string:{pattern:/(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{interpolation:{pattern:/\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,inside:{delimiter:{pattern:/^\\\\\\(|\\)$/,alias:\"variable\"}}}}},keyword:/\\b(as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|Protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,number:/\\b([\\d_]+(\\.[\\de_]+)?|0x[a-f0-9_]+(\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,constant:/\\b(nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,atrule:/@\\b(IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,builtin:/\\b([A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/}),Prism.languages.swift.string.inside.interpolation.inside.rest=Prism.util.clone(Prism.languages.swift);\nPrism.languages.twig={comment:/\\{#[\\s\\S]*?#\\}/,tag:{pattern:/\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,inside:{ld:{pattern:/^(?:\\{\\{\\-?|\\{%\\-?\\s*\\w+)/,inside:{punctuation:/^(?:\\{\\{|\\{%)\\-?/,keyword:/\\w+/}},rd:{pattern:/\\-?(?:%\\}|\\}\\})$/,inside:{punctuation:/.*/}},string:{pattern:/(\"|')(?:\\\\?.)*?\\1/,inside:{punctuation:/^['\"]|['\"]$/}},keyword:/\\b(?:even|if|odd)\\b/,\"boolean\":/\\b(?:true|false|null)\\b/,number:/\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee][-+]?\\d+)?)\\b/,operator:[{pattern:/(\\s)(?:and|b\\-and|b\\-xor|b\\-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,lookbehind:!0},/[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],property:/\\b[a-zA-Z_][a-zA-Z0-9_]*\\b/,punctuation:/[()\\[\\]{}:.,]/}},other:{pattern:/\\S(?:[\\s\\S]*\\S)?/,inside:Prism.languages.markup}};\nPrism.languages.yaml={scalar:{pattern:/([\\-:]\\s*(![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\3[^\\r\\n]+)*)/,lookbehind:!0,alias:\"string\"},comment:/#.*/,key:{pattern:/(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,lookbehind:!0,alias:\"atrule\"},directive:{pattern:/(^[ \\t]*)%.+/m,lookbehind:!0,alias:\"important\"},datetime:{pattern:/([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\\d{4}-\\d\\d?-\\d\\d?([tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(\\.\\d*)?[ \\t]*(Z|[-+]\\d\\d?(:\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(:\\d{2}(\\.\\d*)?)?)(?=[ \\t]*($|,|]|}))/m,lookbehind:!0,alias:\"number\"},\"boolean\":{pattern:/([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(true|false)[ \\t]*(?=$|,|]|})/im,lookbehind:!0,alias:\"important\"},\"null\":{pattern:/([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(null|~)[ \\t]*(?=$|,|]|})/im,lookbehind:!0,alias:\"important\"},string:{pattern:/([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')(?=[ \\t]*($|,|]|}))/m,lookbehind:!0},number:{pattern:/([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)[+\\-]?(0x[\\da-f]+|0o[0-7]+|(\\d+\\.?\\d*|\\.?\\d+)(e[\\+\\-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,lookbehind:!0},tag:/![^\\s]+/,important:/[&*][\\w]+/,punctuation:/---|[:[\\]{}\\-,|>?]|\\.\\.\\./};\n!function(){\"undefined\"!=typeof self&&self.Prism&&self.document&&Prism.hooks.add(\"complete\",function(e){if(e.code){var t=e.element.parentNode,s=/\\s*\\bline-numbers\\b\\s*/;if(t&&/pre/i.test(t.nodeName)&&(s.test(t.className)||s.test(e.element.className))&&!e.element.querySelector(\".line-numbers-rows\")){s.test(e.element.className)&&(e.element.className=e.element.className.replace(s,\"\")),s.test(t.className)||(t.className+=\" line-numbers\");var n,a=e.code.match(/\\n(?!$)/g),l=a?a.length+1:1,r=new Array(l+1);r=r.join(\"<span></span>\"),n=document.createElement(\"span\"),n.setAttribute(\"aria-hidden\",\"true\"),n.className=\"line-numbers-rows\",n.innerHTML=r,t.hasAttribute(\"data-start\")&&(t.style.counterReset=\"linenumber \"+(parseInt(t.getAttribute(\"data-start\"),10)-1)),e.element.appendChild(n)}}})}();\n!function(){\"undefined\"!=typeof self&&self.Prism&&self.document&&Prism.hooks.add(\"complete\",function(e){if(e.code){var t=e.element.parentNode,a=/\\s*\\bcommand-line\\b\\s*/;if(t&&/pre/i.test(t.nodeName)&&(a.test(t.className)||a.test(e.element.className))&&!e.element.querySelector(\".command-line-prompt\")){a.test(e.element.className)&&(e.element.className=e.element.className.replace(a,\"\")),a.test(t.className)||(t.className+=\" command-line\");var n=function(e,a){return(t.getAttribute(e)||a).replace(/\"/g,\"&quot\")},s=new Array(1+e.code.split(\"\\n\").length),r=n(\"data-prompt\",\"\");if(\"\"!==r)s=s.join('<span data-prompt=\"'+r+'\"></span>');else{var l=n(\"data-user\",\"user\"),m=n(\"data-host\",\"localhost\");s=s.join('<span data-user=\"'+l+'\" data-host=\"'+m+'\"></span>')}var o=document.createElement(\"span\");o.className=\"command-line-prompt\",o.innerHTML=s;var i=t.getAttribute(\"data-output\")||\"\";i=i.split(\",\");for(var c=0;c<i.length;c++){var p=i[c].split(\"-\"),d=parseInt(p[0]),u=d;if(2===p.length&&(u=parseInt(p[1])),!isNaN(d)&&!isNaN(u))for(var f=d;u>=f&&f<=o.children.length;f++){var N=o.children[f-1];N.removeAttribute(\"data-user\"),N.removeAttribute(\"data-host\"),N.removeAttribute(\"data-prompt\")}}e.element.innerHTML=o.outerHTML+e.element.innerHTML}}})}();\n!function(){function e(e){this.defaults=r({},e)}function n(e){return e.replace(/-(\\w)/g,function(e,n){return n.toUpperCase()})}function t(e){for(var n=0,t=0;t<e.length;++t)e.charCodeAt(t)==\"\t\".charCodeAt(0)&&(n+=3);return e.length+n}if(\"undefined\"!=typeof self&&self.Prism&&self.document){var r=Object.assign||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t]);return e};e.prototype={setDefaults:function(e){this.defaults=r(this.defaults,e)},normalize:function(e,t){t=r(this.defaults,t);for(var i in t){var o=n(i);\"normalize\"!==i&&\"setDefaults\"!==o&&t[i]&&this[o]&&(e=this[o].call(this,e,t[i]))}return e},leftTrim:function(e){return e.replace(/^\\s+/,\"\")},rightTrim:function(e){return e.replace(/\\s+$/,\"\")},tabsToSpaces:function(e,n){return n=0|n||4,e.replace(/\\t/g,new Array(++n).join(\" \"))},spacesToTabs:function(e,n){return n=0|n||4,e.replace(new RegExp(\" {\"+n+\"}\",\"g\"),\"\t\")},removeTrailing:function(e){return e.replace(/\\s*?$/gm,\"\")},removeInitialLineFeed:function(e){return e.replace(/^(?:\\r?\\n|\\r)/,\"\")},removeIndent:function(e){var n=e.match(/^[^\\S\\n\\r]*(?=\\S)/gm);return n&&n[0].length?(n.sort(function(e,n){return e.length-n.length}),n[0].length?e.replace(new RegExp(\"^\"+n[0],\"gm\"),\"\"):e):e},indent:function(e,n){return e.replace(/^[^\\S\\n\\r]*(?=\\S)/gm,new Array(++n).join(\"\t\")+\"$&\")},breakLines:function(e,n){n=n===!0?80:0|n||80;for(var r=e.split(\"\\n\"),i=0;i<r.length;++i)if(!(t(r[i])<=n)){for(var o=r[i].split(/(\\s+)/g),a=0,s=0;s<o.length;++s){var l=t(o[s]);a+=l,a>n&&(o[s]=\"\\n\"+o[s],a=l)}r[i]=o.join(\"\")}return r.join(\"\\n\")}},Prism.plugins.NormalizeWhitespace=new e({\"remove-trailing\":!0,\"remove-indent\":!0,\"left-trim\":!0,\"right-trim\":!0}),Prism.hooks.add(\"before-sanity-check\",function(e){var n=e.element.parentNode,t=/\\bno-whitespace-normalization\\b/;if(!(!e.code||!n||\"pre\"!==n.nodeName.toLowerCase()||e.settings&&e.settings[\"whitespace-normalization\"]===!1||t.test(n.className)||t.test(e.element.className))){for(var r=n.childNodes,i=\"\",o=\"\",a=!1,s=Prism.plugins.NormalizeWhitespace,l=0;l<r.length;++l){var c=r[l];c==e.element?a=!0:\"#text\"===c.nodeName&&(a?o+=c.nodeValue:i+=c.nodeValue,n.removeChild(c),--l)}if(e.element.children.length&&Prism.plugins.KeepMarkup){var u=i+e.element.innerHTML+o;e.element.innerHTML=s.normalize(u,e.settings),e.code=e.element.textContent}else e.code=i+e.code+o,e.code=s.normalize(e.code,e.settings)}})}}();\n","(function(){\n    tinymce.PluginManager.add('code_block', function(editor, pluginUrl) {\n        var $ = editor.$;\n        var DOM = tinymce.dom.DOMUtils.DOM;\n\n        function isCodeBlock(elm) {\n            return elm && elm.nodeName == 'PRE' && elm.className.indexOf('language-') !== -1;\n        }\n\n        function trimArg(predicateFn) {\n            return function(arg1, arg2) {\n                return predicateFn(arg2);\n            };\n        }\n\n        function getSelectedCodeBlock() {\n            var node = editor.selection.getNode();\n\n            if (isCodeBlock(node)) {\n                return node;\n            }\n\n            return null;\n        }\n\n        function getShowLineNumbers() {\n            var node = getSelectedCodeBlock();\n            if (node) {\n                return (node.className.indexOf('line-numbers') !== -1);\n            }\n\n\n            return false;\n        }\n\n        function getShowCommandPrompt() {\n            var node = getSelectedCodeBlock();\n            if (node) {\n                return (node.className.indexOf('command-line') !== -1);\n            }\n\n            return false;\n        }\n\n        function getCommandPrompt() {\n            var node = getSelectedCodeBlock();\n            if (node) {\n                return node.dataset.prompt;\n            }\n\n            return '';\n        }\n\n        function getCurrentCode() {\n            var node = getSelectedCodeBlock();\n\n            if (node) {\n                return node.textContent;\n            }\n\n            return '';\n        }\n\n        function getCurrentLanguage() {\n            var matches, node = getSelectedCodeBlock();\n\n            if (node) {\n                matches = node.className.match(/language-(\\w+)/);\n                return matches ? matches[1] : '';\n            }\n\n            return '';\n        }\n\n        function insertCodeBlock(data) {\n            editor.undoManager.transact(function() {\n                var node = getSelectedCodeBlock();\n\n                var code = DOM.encode(data.code);\n\n                var classes=['language-'+data.language];\n                if (data.display_line_numbers) {\n                    classes.push('line-numbers');\n                }\n\n                if (data.show_command_prompt) {\n                    classes.push('command-line');\n                }\n\n                var cssClasses = classes.join(' ');\n\n                if (node) {\n                    editor.dom.setAttrib(node, 'class', cssClasses);\n                    if (data.show_command_prompt)\n                        node.dataset.prompt = data.command_prompt;\n\n                    node.innerHTML = \"<code>\"+code+\"</code>\";\n                    Prism.highlightElement(node);\n                    editor.selection.select(node);\n                } else {\n                    editor.insertContent('<pre id=\"__new\" class=\"' + cssClasses + '\"><code>' + code + '</code></pre>');\n                    editor.selection.select(editor.$('#__new').removeAttr('id')[0]);\n                    if (data.show_command_prompt) {\n                        node = getSelectedCodeBlock();\n                        node.dataset.prompt = data.command_prompt;\n                    }\n                }\n            });\n        }\n\n        function openEditor() {\n            editor.windowManager.open({\n                title: \"Insert/edit code block\",\n                minWidth: Math.min(DOM.getViewPort().w, 800),\n                minHeight: Math.min(DOM.getViewPort().h, 650),\n                layout: 'flex',\n                direction: 'column',\n                align: 'stretch',\n                body: [\n                    {\n                        type: 'listbox',\n                        name: 'language',\n                        label: 'Language',\n                        maxWidth: 200,\n                        value: getCurrentLanguage(),\n                        values: codeBlockLanguages\n                    },\n                    {\n                        type: 'checkbox',\n                        name: 'display_line_numbers',\n                        label: 'Display Line Numbers',\n                        checked: getShowLineNumbers()\n                    },\n                    {\n                        type: 'checkbox',\n                        name: 'show_command_prompt',\n                        label: 'Show Command Line',\n                        checked: getShowCommandPrompt()\n                    },\n                    {\n                        type: 'textbox',\n                        name: 'command_prompt',\n                        label: 'Command Prompt',\n                        multiline: false,\n                        spellcheck: false,\n                        value: getCommandPrompt()\n                    },\n                    {\n                        type: 'textbox',\n                        name: 'code',\n                        multiline: true,\n                        spellcheck: false,\n                        ariaLabel: 'Code view',\n                        flex: 1,\n                        style: 'direction: ltr; text-align: left',\n                        classes: 'monospace',\n                        value: getCurrentCode(),\n                        autofocus: true\n                    }\n                ],\n                onSubmit: function(e) {\n                    insertCodeBlock(e.data);\n                }\n            });\n        }\n\n        editor.on('PreProcess', function(e) {\n            $('pre[contenteditable=false]', e.node).\n            filter(trimArg(isCodeBlock)).\n            each(function(idx, elm) {\n                var $elm = $(elm), code = elm.textContent;\n\n                $elm.attr('class', $.trim($elm.attr('class')));\n                $elm.removeAttr('contentEditable');\n\n                $elm.empty().append($('<code></code>').each(function() {\n                    // Needs to be textContent since innerText produces BR:s\n                    this.textContent = code;\n                }));\n            });\n        });\n\n        editor.on('SetContent', function() {\n            var unprocessedCodeBlocks = $('pre').filter(trimArg(isCodeBlock)).filter(function(idx, elm) {\n                return elm.contentEditable !== \"false\";\n            });\n\n            if (unprocessedCodeBlocks.length) {\n                editor.undoManager.transact(function() {\n                    unprocessedCodeBlocks.each(function(idx, elm) {\n                        $(elm).find('br').each(function(idx, elm) {\n                            elm.parentNode.replaceChild(editor.getDoc().createTextNode('\\n'), elm);\n                        });\n\n                        elm.contentEditable = false;\n                        elm.innerHTML = \"<code>\"+editor.dom.encode(elm.textContent)+\"</code>\";\n                        Prism.highlightElement(elm);\n                        elm.className = $.trim(elm.className);\n                    });\n                });\n            }\n        });\n\n        editor.addCommand('code_block', function(){\n            openEditor();\n        });\n\n        editor.addButton('code_block', {\n            title: \"Code Block\",\n            cmd: \"code_block\",\n            image: pluginUrl+'/../img/cb-edit-icon.png'\n        });\n\n        editor.on('dblClick', function(e){\n           if (getSelectedCodeBlock() != null) {\n               openEditor();\n           }\n        });\n    });\n})();"],"sourceRoot":"js/"}